let Router,Marks,Subjects,userAuth;_1dc‍.x([["default",()=>_1dc‍.o]]);_1dc‍.w("express",[["Router",["Router"],function(v){Router=v}]]);_1dc‍.w("../models",[["Marks",["Marks"],function(v){Marks=v}],["Subjects",["Subjects"],function(v){Subjects=v}]]);_1dc‍.w("../middlewares/auth_check",[["userAuth",["userAuth"],function(v){userAuth=v}]]);



const router = Router();

/**
 * @description Get a marks to student
 * @api /marks/api/get
 * @access PRIVATE
 * @type GET
 */
router.get("/api/get/:id", userAuth, async (req, res) => {
  try {
    let marks = await Marks.find({ id: req.params.id });
    if (!marks) {
      return res.status(404).json({
        success: false,
        msg: "Marks not found",
      });
    }
    return res.status(200).json({
      success: true,
      marks,
    });
  } catch (e) {
    _1dc‍.g.console.log(e);
    return res.status(500).json({
      success: false,
      msg: "An error occured at marksAPI",
    });
  }
});

/**
 * @description Get info about subjects
 * @api /marks/api/get-subject-info
 * @access PRIVATE
 * @type GET
 */
router.get("/api/get-subject-info/:class", userAuth, async (req, res) => {
  try {
    
  } catch (e) {
    _1dc‍.g.console.log(e);
  }
});

_1dc‍.d(router);
