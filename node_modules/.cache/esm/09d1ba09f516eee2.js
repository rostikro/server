let Schema,pick,conn1,conn2;_f51‍.x([["default",()=>_f51‍.o]]);_f51‍.w("mongoose",[["Schema",["Schema"],function(v){Schema=v}]]);_f51‍.w("lodash",[["pick",["pick"],function(v){pick=v}]]);_f51‍.w("../database",[["conn1",["conn1"],function(v){conn1=v}],["conn2",["conn2"],function(v){conn2=v}]]);



const SubjectArraySchema = new Schema({
  id: { type: Number, required: true },
  subject: { type: String, required: true },
});

const SubjectsSchema = new Schema(
  {
    id: {
      type: String,
      required: true,
    },
    count: {
      type: Number,
      required: true,
    },
    subjects: [SubjectArraySchema],
  },
  { versionKey: false }
);

SubjectsSchema.methods.getInfo = function () {
  return pick(this, ["subjects"]);
}

const Subjects = conn1.model("subjects", SubjectsSchema);
_f51‍.d(Subjects);
